{"version":3,"sources":["components/Typography.js","components/Page.js","pages/NetflixIndiaPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","NetflixIndiaPage","_useState","useState","_useState2","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","movie","setMovie","_useState3","_useState4","_useState5","_useState6","getMovieData","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_fazalshaik_NuggetsLab_ReactJS_Experiments_react_reduction_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","data","wrap","_context","prev","next","axios","get","sent","console","log","t0","stop","apply","this","arguments","useEffect","react__WEBPACK_IMPORTED_MODULE_4___default","components_Page__WEBPACK_IMPORTED_MODULE_3__","material_table__WEBPACK_IMPORTED_MODULE_6___default","columns","field","cellStyle","backgroundColor","color","headerStyle","fontSize","options","filtering","filterCellStyle","paging","pageSize","pageSizeOptions","exportButton"],"mappings":"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","file":"static/js/26.e460b494.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import Page from 'components/Page';\nimport React from 'react';\nimport { Card, CardBody, CardHeader, Col, Row, Table } from 'reactstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport MaterialTable from 'material-table';\n// import { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst tableTypes = ['', 'bordered', 'striped', 'hover'];\n\nconst NetflixIndiaPage = () => {\n    // const classes = useStyles();\n    const [movie, setMovie] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [searchmonth, setSearchmonth] = useState(\"\");\n  \n    const getMovieData = async () => {\n      try {\n        const data = await axios.get(\n          \"https://nuggetsnetwork.com/Products/netflix_india.json\"\n          // \"http://makeup-api.herokuapp.com/api/v1/products.json?brand=maybelline\"\n        );\n        console.log(data.data);\n        setMovie(data.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    \n    const columns=[\n        {\n            title:'Movie Name',field:'fTitle',\n            cellStyle:{\n                backgroundColor: '#039be5',\n                color:'#FFF'\n            },\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        },\n        {\n            title:'TrailerType',field:'TrailerType',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        },\n        {\n            title:'Views',field:'views',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25,\n              }\n        },\n        {\n            title:'Likes',field:'likes',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        },\n        {\n            title:'IMDB Rating',field:'Rating',\n            headerStyle: {\n                backgroundColor: '#039be5',\n                color:'#FFF',\n                fontSize:25\n              }\n        }\n    ]\n\n    useEffect(() => {\n      getMovieData();\n    }, []);\n  return (\n    <Page\n      title=\"NetFlix India\"\n      breadcrumbs={[{ name: 'netflixindia', active: true }]}\n      className=\"NetflixIndiaPage\"\n    >\n    \n    <MaterialTable title=\"Netflix India Trailers Tracker\"\n        data={movie}\n        columns={columns}\n        options={{\n            filtering:true,\n            filterCellStyle:{\n                backgroundColor: '#A9E3FF',\n                color:'#FFF'\n            },\n            paging:true,\n            pageSize:10,\n            pageSizeOptions: [25, 50, 100, 250],\n            exportButton:true\n        }}\n        />\n    </Page>\n    \n  );\n};\n\nexport default NetflixIndiaPage;\n"],"sourceRoot":""}